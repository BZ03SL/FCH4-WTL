import sys
import numpy as np
import pandas as pd
pd.set_option('display.max_rows', 999)
pd.set_option('display.width', 500)
pd.set_option('display.notebook_repr_html', True)
import matplotlib
import matplotlib.pyplot as plt
import seaborn as sns
import random

from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn import metrics, datasets
from collections import Counter
import statsmodels.api as sm
from statsmodels.api import OLS
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
%matplotlib inline

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()

assert(sys.version_info.major==3),print(sys.version)

df=pd.read_csv('HK-MPM.csv')
df=df.replace(-9999,np.nan)
df=df.dropna()
str2float = lambda d: list(map(float, d))
for i in df.index:
    df['yr'] = df['TIMESTAMP_START'][i]/100000000
    df['month'] = (df['TIMESTAMP_START'][i]/1000000)%100
    df['day'] = (df['TIMESTAMP_START'][i]/10000)%100
    df['hr'] = (df['TIMESTAMP_START'][i]/100)%100
    df['min'] = df['TIMESTAMP_START'][i]%100

def split_data(df, train_size=.8):
    length = len(df)
    indices = list(range(length))
    np.random.shuffle(indices)
    
    train_indices = indices[0:int(length * train_size)]
    test_indices = indices[int(length * train_size):]

    train = df.iloc[train_indices]
    test = df.iloc[test_indices]

    return train, test

dfr=df.copy()
df_train_v,df_test_v  = split_data(dfr)

#提取训练集中每个月份的CH4的均值
month1_m=df_train_v[df_train_v['month']==1].FCH4_F.mean()
month2_m=df_train_v[df_train_v['month']==2].FCH4_F.mean()
month3_m=df_train_v[df_train_v['month']==3].FCH4_F.mean()
month4_m=df_train_v[df_train_v['month']==4].FCH4_F.mean()
month5_m=df_train_v[df_train_v['month']==5].FCH4_F.mean()
month6_m=df_train_v[df_train_v['month']==6].FCH4_F.mean()
month7_m=df_train_v[df_train_v['month']==7].FCH4_F.mean()
month8_m=df_train_v[df_train_v['month']==8].FCH4_F.mean()
month9_m=df_train_v[df_train_v['month']==9].FCH4_F.mean()
month10_m=df_train_v[df_train_v['month']==10].FCH4_F.mean()
month11_m=df_train_v[df_train_v['month']==11].FCH4_F.mean()
month12_m=df_train_v[df_train_v['month']==12].FCH4_F.mean()

#提取训练集中每个月份的CH4标准差
var_1=df_train_v[df_train_v['month']==1].FCH4_F.var()
var_2=df_train_v[df_train_v['month']==2].FCH4_F.var()
var_3=df_train_v[df_train_v['month']==3].FCH4_F.var()
var_4=df_train_v[df_train_v['month']==4].FCH4_F.var()
var_5=df_train_v[df_train_v['month']==5].FCH4_F.var()
var_6=df_train_v[df_train_v['month']==6].FCH4_F.var()
var_7=df_train_v[df_train_v['month']==7].FCH4_F.var()
var_8=df_train_v[df_train_v['month']==8].FCH4_F.var()
var_9=df_train_v[df_train_v['month']==9].FCH4_F.var()
var_10=df_train_v[df_train_v['month']==10].FCH4_F.var()
var_11=df_train_v[df_train_v['month']==11].FCH4_F.var()
var_12=df_train_v[df_train_v['month']==12].FCH4_F.var()

#提取训练集中每个月份的CH4的最大值
max_1=df_train_v[df_train_v['month']==1].FCH4_F.max()
max_2=df_train_v[df_train_v['month']==2].FCH4_F.max()
max_3=df_train_v[df_train_v['month']==3].FCH4_F.max()
max_4=df_train_v[df_train_v['month']==4].FCH4_F.max()
max_5=df_train_v[df_train_v['month']==5].FCH4_F.max()
max_6=df_train_v[df_train_v['month']==6].FCH4_F.max()
max_7=df_train_v[df_train_v['month']==7].FCH4_F.max()
max_8=df_train_v[df_train_v['month']==8].FCH4_F.max()
max_9=df_train_v[df_train_v['month']==9].FCH4_F.max()
max_10=df_train_v[df_train_v['month']==10].FCH4_F.max()
max_11=df_train_v[df_train_v['month']==11].FCH4_F.max()
max_12=df_train_v[df_train_v['month']==12].FCH4_F.max()

#提取训练集中每个月份的CH4的最小值
min_1=df_train_v[df_train_v['month']==1].FCH4_F.min()
min_2=df_train_v[df_train_v['month']==2].FCH4_F.min()
min_3=df_train_v[df_train_v['month']==3].FCH4_F.min()
min_4=df_train_v[df_train_v['month']==4].FCH4_F.min()
min_5=df_train_v[df_train_v['month']==5].FCH4_F.min()
min_6=df_train_v[df_train_v['month']==6].FCH4_F.min()
min_7=df_train_v[df_train_v['month']==7].FCH4_F.min()
min_8=df_train_v[df_train_v['month']==8].FCH4_F.min()
min_9=df_train_v[df_train_v['month']==9].FCH4_F.min()
min_10=df_train_v[df_train_v['month']==10].FCH4_F.min()
min_11=df_train_v[df_train_v['month']==11].FCH4_F.min()
min_12=df_train_v[df_train_v['month']==12].FCH4_F.min()

#把CH4_mean加入训练数据
CH4_mean_train={'CH4_mean':df_train_v['month'].values.tolist()}
CH4_mean_train=pd.DataFrame(CH4_mean_train)
df_train_v.reset_index(drop=True, inplace=True)
df_train_v=pd.concat([df_train_v,CH4_mean_train],axis=1)

for i in df_train_v.index:
    if(df_train_v.loc[i,'CH4_mean']==1):
        df_train_v.loc[i,'CH4_mean']=month1_m
    elif(df_train_v.loc[i,'CH4_mean']==2):
        df_train_v.loc[i,'CH4_mean']=month2_m
    elif(df_train_v.loc[i,'CH4_mean']==3):
        df_train_v.loc[i,'CH4_mean']=month3_m
    elif(df_train_v.loc[i,'CH4_mean']==4):
        df_train_v.loc[i,'CH4_mean']=month4_m
    elif(df_train_v.loc[i,'CH4_mean']==5):
        df_train_v.loc[i,'CH4_mean']=month5_m
    elif(df_train_v.loc[i,'CH4_mean']==6):
        df_train_v.loc[i,'CH4_mean']=month6_m
    elif(df_train_v.loc[i,'CH4_mean']==7):
        df_train_v.loc[i,'CH4_mean']=month7_m
    elif(df_train_v.loc[i,'CH4_mean']==8):
        df_train_v.loc[i,'CH4_mean']=month8_m
    elif(df_train_v.loc[i,'CH4_mean']==9):
        df_train_v.loc[i,'CH4_mean']=month9_m
    elif(df_train_v.loc[i,'CH4_mean']==10):
        df_train_v.loc[i,'CH4_mean']=month10_m
    elif(df_train_v.loc[i,'CH4_mean']==11):
        df_train_v.loc[i,'CH4_mean']=month11_m
    elif(df_train_v.loc[i,'CH4_mean']==12):
        df_train_v.loc[i,'CH4_mean']=month12_m

#把CH4_mean加入测试数据
CH4_mean_test={'CH4_mean':df_test_v['month'].values.tolist()}
CH4_mean_test=pd.DataFrame(CH4_mean_test)
df_test_v.reset_index(drop=True, inplace=True)
df_test_v=pd.concat([df_test_v,CH4_mean_test],axis=1)
for i in df_test_v.index:
    if(df_test_v.loc[i,'CH4_mean']==1):
        df_test_v.loc[i,'CH4_mean']=month1_m
    elif(df_test_v.loc[i,'CH4_mean']==2):
        df_test_v.loc[i,'CH4_mean']=month2_m
    elif(df_test_v.loc[i,'CH4_mean']==3):
        df_test_v.loc[i,'CH4_mean']=month3_m
    elif(df_test_v.loc[i,'CH4_mean']==4):
        df_test_v.loc[i,'CH4_mean']=month4_m
    elif(df_test_v.loc[i,'CH4_mean']==5):
        df_test_v.loc[i,'CH4_mean']=month5_m
    elif(df_test_v.loc[i,'CH4_mean']==6):
        df_test_v.loc[i,'CH4_mean']=month6_m
    elif(df_test_v.loc[i,'CH4_mean']==7):
        df_test_v.loc[i,'CH4_mean']=month7_m
    elif(df_test_v.loc[i,'CH4_mean']==8):
        df_test_v.loc[i,'CH4_mean']=month8_m
    elif(df_test_v.loc[i,'CH4_mean']==9):
        df_test_v.loc[i,'CH4_mean']=month9_m
    elif(df_test_v.loc[i,'CH4_mean']==10):
        df_test_v.loc[i,'CH4_mean']=month10_m
    elif(df_test_v.loc[i,'CH4_mean']==11):
        df_test_v.loc[i,'CH4_mean']=month11_m
    elif(df_test_v.loc[i,'CH4_mean']==12):
        df_test_v.loc[i,'CH4_mean']=month12_m

#把CH4_var加入训练数据
CH4_var_train={'CH4_var':df_train_v['month'].values.tolist()}
CH4_var_train=pd.DataFrame(CH4_var_train)
df_train_v=pd.concat([df_train_v,CH4_var_train],axis=1)
for i in df_train_v.index:
    if(df_train_v.loc[i,'CH4_var']==1):
        df_train_v.loc[i,'CH4_var']=var_1
    elif(df_train_v.loc[i,'CH4_var']==2):
        df_train_v.loc[i,'CH4_var']=var_2
    elif(df_train_v.loc[i,'CH4_var']==3):
        df_train_v.loc[i,'CH4_var']=var_3
    elif(df_train_v.loc[i,'CH4_var']==4):
        df_train_v.loc[i,'CH4_var']=var_4
    elif(df_train_v.loc[i,'CH4_var']==5):
        df_train_v.loc[i,'CH4_var']=var_5
    elif(df_train_v.loc[i,'CH4_var']==6):
        df_train_v.loc[i,'CH4_var']=var_6
    elif(df_train_v.loc[i,'CH4_var']==7):
        df_train_v.loc[i,'CH4_var']=var_7
    elif(df_train_v.loc[i,'CH4_var']==8):
        df_train_v.loc[i,'CH4_var']=var_8
    elif(df_train_v.loc[i,'CH4_var']==9):
        df_train_v.loc[i,'CH4_var']=var_9
    elif(df_train_v.loc[i,'CH4_var']==10):
        df_train_v.loc[i,'CH4_var']=var_10
    elif(df_train_v.loc[i,'CH4_var']==11):
        df_train_v.loc[i,'CH4_var']=var_11
    elif(df_train_v.loc[i,'CH4_var']==12):
        df_train_v.loc[i,'CH4_var']=var_12

#把CH4_var加入测试数据
CH4_var_test={'CH4_var':df_test_v['month'].values.tolist()}
CH4_var_test=pd.DataFrame(CH4_var_test)
df_test_v=pd.concat([df_test_v,CH4_var_test],axis=1)
for i in df_test_v.index:
    if(df_test_v.loc[i,'CH4_var']==1):
        df_test_v.loc[i,'CH4_var']=var_1
    elif(df_test_v.loc[i,'CH4_var']==2):
        df_test_v.loc[i,'CH4_var']=var_2
    elif(df_test_v.loc[i,'CH4_var']==3):
        df_test_v.loc[i,'CH4_var']=var_3
    elif(df_test_v.loc[i,'CH4_var']==4):
        df_test_v.loc[i,'CH4_var']=var_4
    elif(df_test_v.loc[i,'CH4_var']==5):
        df_test_v.loc[i,'CH4_var']=var_5
    elif(df_test_v.loc[i,'CH4_var']==6):
        df_test_v.loc[i,'CH4_var']=var_6
    elif(df_test_v.loc[i,'CH4_var']==7):
        df_test_v.loc[i,'CH4_var']=var_7
    elif(df_test_v.loc[i,'CH4_var']==8):
        df_test_v.loc[i,'CH4_var']=var_8
    elif(df_test_v.loc[i,'CH4_var']==9):
        df_test_v.loc[i,'CH4_var']=var_9
    elif(df_test_v.loc[i,'CH4_var']==10):
        df_test_v.loc[i,'CH4_var']=var_10
    elif(df_test_v.loc[i,'CH4_var']==11):
        df_test_v.loc[i,'CH4_var']=var_11
    elif(df_test_v.loc[i,'CH4_var']==12):
        df_test_v.loc[i,'CH4_var']=var_12

#把CH4_max加入训练数据
CH4_max_train={'CH4_max':df_train_v['month'].values.tolist()}
CH4_max_train=pd.DataFrame(CH4_max_train)
df_train_v=pd.concat([df_train_v,CH4_max_train],axis=1)
for i in df_train_v.index:
    if(df_train_v.loc[i,'CH4_max']==1):
        df_train_v.loc[i,'CH4_max']=max_1
    elif(df_train_v.loc[i,'CH4_max']==2):
        df_train_v.loc[i,'CH4_max']=max_2
    elif(df_train_v.loc[i,'CH4_max']==3):
        df_train_v.loc[i,'CH4_max']=max_3
    elif(df_train_v.loc[i,'CH4_max']==4):
        df_train_v.loc[i,'CH4_max']=max_4
    elif(df_train_v.loc[i,'CH4_max']==5):
        df_train_v.loc[i,'CH4_max']=max_5
    elif(df_train_v.loc[i,'CH4_max']==6):
        df_train_v.loc[i,'CH4_max']=max_6
    elif(df_train_v.loc[i,'CH4_max']==7):
        df_train_v.loc[i,'CH4_max']=max_7
    elif(df_train_v.loc[i,'CH4_max']==8):
        df_train_v.loc[i,'CH4_max']=max_8
    elif(df_train_v.loc[i,'CH4_max']==9):
        df_train_v.loc[i,'CH4_max']=max_9
    elif(df_train_v.loc[i,'CH4_max']==10):
        df_train_v.loc[i,'CH4_max']=max_10
    elif(df_train_v.loc[i,'CH4_max']==11):
        df_train_v.loc[i,'CH4_max']=max_11
    elif(df_train_v.loc[i,'CH4_max']==12):
        df_train_v.loc[i,'CH4_max']=max_12

#把CH4_max加入测试数据
CH4_max_test={'CH4_max':df_test_v['month'].values.tolist()}
CH4_max_test=pd.DataFrame(CH4_max_test)
df_test_v=pd.concat([df_test_v,CH4_max_test],axis=1)
for i in df_test_v.index:
    if(df_test_v.loc[i,'CH4_max']==1):
        df_test_v.loc[i,'CH4_max']=max_1
    elif(df_test_v.loc[i,'CH4_max']==2):
        df_test_v.loc[i,'CH4_max']=max_2
    elif(df_test_v.loc[i,'CH4_max']==3):
        df_test_v.loc[i,'CH4_max']=max_3
    elif(df_test_v.loc[i,'CH4_max']==4):
        df_test_v.loc[i,'CH4_max']=max_4
    elif(df_test_v.loc[i,'CH4_max']==5):
        df_test_v.loc[i,'CH4_max']=max_5
    elif(df_test_v.loc[i,'CH4_max']==6):
        df_test_v.loc[i,'CH4_max']=max_6
    elif(df_test_v.loc[i,'CH4_max']==7):
        df_test_v.loc[i,'CH4_max']=max_7
    elif(df_test_v.loc[i,'CH4_max']==8):
        df_test_v.loc[i,'CH4_max']=max_8
    elif(df_test_v.loc[i,'CH4_max']==9):
        df_test_v.loc[i,'CH4_max']=max_9
    elif(df_test_v.loc[i,'CH4_max']==10):
        df_test_v.loc[i,'CH4_max']=max_10
    elif(df_test_v.loc[i,'CH4_max']==11):
        df_test_v.loc[i,'CH4_max']=max_11
    elif(df_test_v.loc[i,'CH4_max']==12):
        df_test_v.loc[i,'CH4_max']=max_12

#把CH4_min加入测试数据
CH4_min_test={'CH4_min':df_test_v['month'].values.tolist()}
CH4_min_test=pd.DataFrame(CH4_min_test)
df_test_v=pd.concat([df_test_v,CH4_min_test],axis=1)
for i in df_test_v.index:
    if(df_test_v.loc[i,'CH4_min']==1):
        df_test_v.loc[i,'CH4_min']=min_1
    elif(df_test_v.loc[i,'CH4_min']==2):
        df_test_v.loc[i,'CH4_min']=min_2
    elif(df_test_v.loc[i,'CH4_min']==3):
        df_test_v.loc[i,'CH4_min']=min_3
    elif(df_test_v.loc[i,'CH4_min']==4):
        df_test_v.loc[i,'CH4_min']=min_4
    elif(df_test_v.loc[i,'CH4_min']==5):
        df_test_v.loc[i,'CH4_min']=min_5
    elif(df_test_v.loc[i,'CH4_min']==6):
        df_test_v.loc[i,'CH4_min']=min_6
    elif(df_test_v.loc[i,'CH4_min']==7):
        df_test_v.loc[i,'CH4_min']=min_7
    elif(df_test_v.loc[i,'CH4_min']==8):
        df_test_v.loc[i,'CH4_min']=min_8
    elif(df_test_v.loc[i,'CH4_min']==9):
        df_test_v.loc[i,'CH4_min']=min_9
    elif(df_test_v.loc[i,'CH4_min']==10):
        df_test_v.loc[i,'CH4_min']=min_10
    elif(df_test_v.loc[i,'CH4_min']==11):
        df_test_v.loc[i,'CH4_min']=min_11
    elif(df_test_v.loc[i,'CH4_min']==12):
        df_test_v.loc[i,'CH4_min']=min_12

#把CH4_min加入训练数据
CH4_min_train={'CH4_min':df_train_v['month'].values.tolist()}
CH4_min_train=pd.DataFrame(CH4_min_train)
df_train_v=pd.concat([df_train_v,CH4_min_train],axis=1)
for i in df_train_v.index:
    if(df_train_v.loc[i,'CH4_min']==1):
        df_train_v.loc[i,'CH4_min']=min_1
    elif(df_train_v.loc[i,'CH4_min']==2):
        df_train_v.loc[i,'CH4_min']=min_2
    elif(df_train_v.loc[i,'CH4_min']==3):
        df_train_v.loc[i,'CH4_min']=min_3
    elif(df_train_v.loc[i,'CH4_min']==4):
        df_train_v.loc[i,'CH4_min']=min_4
    elif(df_train_v.loc[i,'CH4_min']==5):
        df_train_v.loc[i,'CH4_min']=min_5
    elif(df_train_v.loc[i,'CH4_min']==6):
        df_train_v.loc[i,'CH4_min']=min_6
    elif(df_train_v.loc[i,'CH4_min']==7):
        df_train_v.loc[i,'CH4_min']=min_7
    elif(df_train_v.loc[i,'CH4_min']==8):
        df_train_v.loc[i,'CH4_min']=min_8
    elif(df_train_v.loc[i,'CH4_min']==9):
        df_train_v.loc[i,'CH4_min']=min_9
    elif(df_train_v.loc[i,'CH4_min']==10):
        df_train_v.loc[i,'CH4_min']=min_10
    elif(df_train_v.loc[i,'CH4_min']==11):
        df_train_v.loc[i,'CH4_min']=min_11
    elif(df_train_v.loc[i,'CH4_min']==12):
        df_train_v.loc[i,'CH4_min']=min_12

del df_train_v['TIMESTAMP_START']
del df_test_v['TIMESTAMP_START']
del df_train_v['yr']
del df_test_v['yr']
del df_train_v['month']
del df_test_v['month']
del df_train_v['day']
del df_test_v['day']
del df_train_v['hr']
del df_test_v['hr']
del df_train_v['min']
del df_test_v['min']

y_train_v = df_train_v['FCH4_F']
y_test_v = df_test_v['FCH4_F']


#df_train2_v = (df_train_v - df_train_v.min(axis=0))/(df_train_v.max(axis=0)-df_train_v.min(axis=0))
#df_test2_v = (df_test_v - df_train_v.min(axis=0))/(df_train_v.max(axis=0)-df_train_v.min(axis=0))

#df_train_v = df_train2_v
#df_test_v = df_test2_v

del df_train_v['FCH4_F']
del df_test_v['FCH4_F']

print(df_train_v.info())

train_x_v = df_train_v
train_y_v = y_train_v
test_x_v  = df_test_v
test_y_v  = y_test_v
print(train_x_v.shape, train_y_v.shape)

lgbm_vv=lgb.LGBMRegressor(learning_rate=0.095,max_depth=22,num_leaves=130,min_child_samples=60,
                            feature_fraction=0.9,bagging_fraction=0.9,bagging_freq=5,
                            reg_alpha=0.06,reg_lambda=0.01)
lgbm_vv.fit(train_x_v,train_y_v)

train_y_pred_vv = lgbm_vv.predict(train_x_v)
test_y_pred_vv = lgbm_vv.predict(test_x_v)

import random
true_d=test_y_v
pred_d=test_y_pred_vv
true_d=pd.DataFrame(true_d)
pred_d=pd.DataFrame(pred_d)
length_d=int(test_y.shape[0])
for i in range(0,int(39*length_d/40)):
    rand=random.random()
    x=rand*(true_d.shape[0])
    x=int(x)
    x=x%true_d.shape[0]
    true_i=true_d.index[x]
    pred_i=pred_d.index[x]
    true_d=true_d.drop([true_i])
    pred_d=pred_d.drop([pred_i])
    
from matplotlib.pyplot import MultipleLocator
plt.figure(figsize=(30,30))
g=sns.jointplot(true_d,pred_d,kind="kde",space=0,color="darkgreen",n_levels=7,xlim=(-20,175),ylim=(-20,175))
g.set_axis_labels("","",
                  fontsize=20,labelpad=12,family='Arial');
g.plot_joint(plt.scatter,s=30,marker="+",color="b")
plt.plot([-35,180],[-35,180],linewidth = '1',color='b')
plt.text(110,-15,"$\mathregular{R^2}$: 0.807\nRMSE: 30.9\nMAE: 17.8",fontsize=19,family='Arial')
plt.tick_params(labelsize=16,length=10)

ax=plt.gca()
x_major_locator=MultipleLocator(50)
y_major_locator=MultipleLocator(50)
ax.xaxis.set_major_locator(x_major_locator)
ax.yaxis.set_major_locator(y_major_locator)

plt.tight_layout()
